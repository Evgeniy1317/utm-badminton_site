// Fallback –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ - –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ EmailJS
// –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –≤–∞—à–∏ –∏–∑ EmailJS
const EMAILJS_SERVICE_ID = 'your_service_id';
const EMAILJS_TEMPLATE_ID = 'your_template_id';
const EMAILJS_PUBLIC_KEY = 'your_public_key';

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ EmailJS
function sendFormViaEmailJS(formData) {
    return new Promise((resolve, reject) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ EmailJS
        if (typeof emailjs === 'undefined') {
            reject(new Error('EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω'));
            return;
        }

        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è EmailJS
        const templateParams = {
            from_name: formData.get('name'),
            from_phone: formData.get('phone'),
            from_email: formData.get('email'),
            level: formData.get('level'),
            hall: formData.get('hall'),
            day: formData.get('day'),
            message: formData.get('message'),
            to_email: 'evgenijurin998@gmail.com'
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ EmailJS
        emailjs.send(EMAILJS_SERVICE_ID, EMAILJS_TEMPLATE_ID, templateParams, EMAILJS_PUBLIC_KEY)
            .then(function(response) {
                console.log('EmailJS –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', response);
                resolve({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' });
            })
            .catch(function(error) {
                console.error('–û—à–∏–±–∫–∞ EmailJS:', error);
                reject(new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ EmailJS'));
            });
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Telegram Bot API (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
function sendFormViaTelegram(formData) {
    const botToken = 'YOUR_BOT_TOKEN'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
    const chatId = 'YOUR_CHAT_ID'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat ID
    
    const message = `üéæ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É:

üë§ –ò–º—è: ${formData.get('name')}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.get('phone')}
üìß Email: ${formData.get('email') || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üè∏ –£—Ä–æ–≤–µ–Ω—å: ${formData.get('level')}
üèüÔ∏è –ó–∞–ª: ${formData.get('hall')}
üìÖ –î–µ–Ω—å: ${formData.get('day')}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.get('message') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

‚è∞ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;

    return fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            chat_id: chatId,
            text: message,
            parse_mode: 'HTML'
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.ok) {
            return { success: true, message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!' };
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram');
        }
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ
window.formFallback = {
    sendViaEmailJS: sendFormViaEmailJS,
    sendViaTelegram: sendFormViaTelegram
};
